stages:
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  CI_REGISTRY: https://index.docker.io/v1/
  CI_REGISTRY_USER: grejs420
  CI_REGISTRY_PASSWORD: rovgard1!
  CI_REGISTRY_IMAGE_USER_SERVICE: docker.io/grejs420/user-service
  CI_REGISTRY_IMAGE_CHAT_SERVICE: docker.io/grejs420/chat-service
  CI_REGISTRY_IMAGE_MESSAGE_SERVICE: docker.io/grejs420/message-service
  CI_REGISTRY_IMAGE_AUTH_SERVICE: docker.io/grejs420/auth-service
  CI_REGISTRY_IMAGE_API_GATEWAY: docker.io/grejs420/api-gateway
  KUBE_URL: https://swwao.courses.orbit.au.dk/grp-6-kube
  KUBE_TOKEN: $KUBE_TOKEN
  KUBE_NAMESPACE: default

build_user_service:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE_USER_SERVICE:$CI_COMMIT_REF_SLUG ./user-service
    - docker push $CI_REGISTRY_IMAGE_USER_SERVICE:$CI_COMMIT_REF_SLUG
  only:
    - main

# Commented out until the chat service is implemented
# build_chat_service:
#   stage: build
#   image: docker:latest
#   services:
#     - docker:dind
#   script:
#     - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#     - docker build -t $CI_REGISTRY_IMAGE_CHAT_SERVICE:$CI_COMMIT_REF_SLUG ./chat-service
#     - docker push $CI_REGISTRY_IMAGE_CHAT_SERVICE:$CI_COMMIT_REF_SLUG
#   only:
#     - main

# Commented out until the message service is implemented
# build_message_service:
#   stage: build
#   image: docker:latest
#   services:
#     - docker:dind
#   script:
#     - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#     - docker build -t $CI_REGISTRY_IMAGE_MESSAGE_SERVICE:$CI_COMMIT_REF_SLUG ./message-service
#     - docker push $CI_REGISTRY_IMAGE_MESSAGE_SERVICE:$CI_COMMIT_REF_SLUG
#   only:
#     - main

# Commented out until the auth service is implemented
# build_auth_service:
#   stage: build
#   image: docker:latest
#   services:
#     - docker:dind
#   script:
#     - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#     - docker build -t $CI_REGISTRY_IMAGE_AUTH_SERVICE:$CI_COMMIT_REF_SLUG ./auth-service
#     - docker push $CI_REGISTRY_IMAGE_AUTH_SERVICE:$CI_COMMIT_REF_SLUG
#   only:
#     - main

# Commented out until the API gateway is implemented
# build_api_gateway:
#   stage: build
#   image: docker:latest
#   services:
#     - docker:dind
#   script:
#     - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
#     - docker build -t $CI_REGISTRY_IMAGE_API_GATEWAY:$CI_COMMIT_REF_SLUG ./api-gateway
#     - docker push $CI_REGISTRY_IMAGE_API_GATEWAY:$CI_COMMIT_REF_SLUG
#   only:
#     - main

test_user_service:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker rm -f user-service || true
    - docker run -d --name user-service -p 3000:3000 $CI_REGISTRY_IMAGE_USER_SERVICE:$CI_COMMIT_REF_SLUG
    - sleep 10 # Wait for the container to be fully up and running
    - docker ps | grep user-service
  only:
    - main

# Repeat similar test stages for other services...

deploy:
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL
    - kubectl config set-context default-context --cluster=default-cluster --namespace=$KUBE_NAMESPACE --user=default-user
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config use-context default-context
    - kubectl apply -f k8s/user-service-deployment.yml
    # Commented out until other services are implemented
    # - kubectl apply -f k8s/chat-service-deployment.yml
    # - kubectl apply -f k8s/message-service-deployment.yml
    # - kubectl apply -f k8s/auth-service-deployment.yml
    # - kubectl apply -f k8s/api-gateway-deployment.yml
  only:
    - main
