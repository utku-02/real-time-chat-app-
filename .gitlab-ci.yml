stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  CI_REGISTRY: https://index.docker.io/v1/
  CI_REGISTRY_USER: grejs420
  CI_REGISTRY_PASSWORD: rovgard1!
  CI_REGISTRY_IMAGE_USER_SERVICE: docker.io/grejs420/user-service
  CI_REGISTRY_IMAGE_CHAT_SERVICE: docker.io/grejs420/chat-service
  CI_REGISTRY_IMAGE_MESSAGE_SERVICE: docker.io/grejs420/message-service
  CI_REGISTRY_IMAGE_AUTH_SERVICE: docker.io/grejs420/auth-service
  CI_REGISTRY_IMAGE_FRONTEND: docker.io/grejs420/frontend
  CI_REGISTRY_IMAGE_GRAPHQL_GATEWAY: docker.io/grejs420/graphql-gateway
  KUBE_URL: https://swwao.courses.orbit.au.dk/grp-6-kube
  KUBE_TOKEN: $KUBE_TOKEN
  KUBE_NAMESPACE: default

# Build Jobs
build_user_service:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE_USER_SERVICE:latest ./backend/user-service
    - docker push $CI_REGISTRY_IMAGE_USER_SERVICE:latest
  only:
    - main

build_chat_service:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE_CHAT_SERVICE:latest ./backend/chat-service
    - docker push $CI_REGISTRY_IMAGE_CHAT_SERVICE:latest
  only:
    - main

build_message_service:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE_MESSAGE_SERVICE:latest ./backend/message-service
    - docker push $CI_REGISTRY_IMAGE_MESSAGE_SERVICE:latest
  only:
    - main

build_auth_service:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE_AUTH_SERVICE:latest ./backend/auth-service
    - docker push $CI_REGISTRY_IMAGE_AUTH_SERVICE:latest
  only:
    - main

build_frontend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE_FRONTEND:latest ./frontend
    - docker push $CI_REGISTRY_IMAGE_FRONTEND:latest
  only:
    - main

build_graphql_gateway:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE_GRAPHQL_GATEWAY:latest ./backend/graphql-gateway
    - docker push $CI_REGISTRY_IMAGE_GRAPHQL_GATEWAY:latest
  only:
    - main

# Deploy Jobs
deploy_database:
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL
    - kubectl config set-context default-context --cluster=default-cluster --namespace=$KUBE_NAMESPACE --user=default-user
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config use-context default-context
    - kubectl apply -f database/k8s/deployment.yml
    - kubectl apply -f database/k8s/service.yml
    - kubectl apply -f database/k8s/pv.yml
    - kubectl apply -f database/k8s/pvc.yml

  only:
    - main


deploy_user_service:
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL
    - kubectl config set-context default-context --cluster=default-cluster --namespace=$KUBE_NAMESPACE --user=default-user
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config use-context default-context
    - kubectl apply -f backend/user-service/k8s/deployment.yml
    - kubectl apply -f backend/user-service/k8s/service.yml
  only:
    - main

deploy_chat_service:
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL
    - kubectl config set-context default-context --cluster=default-cluster --namespace=$KUBE_NAMESPACE --user=default-user
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config use-context default-context
    - kubectl apply -f backend/chat-service/k8s/deployment.yml
    - kubectl apply -f backend/chat-service/k8s/service.yml
  only:
    - main

deploy_message_service:
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL
    - kubectl config set-context default-context --cluster=default-cluster --namespace=$KUBE_NAMESPACE --user=default-user
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config use-context default-context
    - kubectl apply -f backend/message-service/k8s/deployment.yml
    - kubectl apply -f backend/message-service/k8s/service.yml
  only:
    - main

deploy_auth_service:
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL
    - kubectl config set-context default-context --cluster=default-cluster --namespace=$KUBE_NAMESPACE --user=default-user
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config use-context default-context
    - kubectl apply -f backend/auth-service/k8s/deployment.yml
    - kubectl apply -f backend/auth-service/k8s/service.yml
    
  only:
    - main

deploy_graphql_gateway:
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL
    - kubectl config set-context default-context --cluster=default-cluster --namespace=$KUBE_NAMESPACE --user=default-user
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config use-context default-context
    - kubectl apply -f backend/graphql-gateway/k8s/deployment.yml
    - kubectl apply -f backend/graphql-gateway/k8s/service.yml
  only:
    - main

deploy_frontend:
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL
    - kubectl config set-context default-context --cluster=default-cluster --namespace=$KUBE_NAMESPACE --user=default-user
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config use-context default-context
    - kubectl apply -f frontend/k8s/deployment.yml
    - kubectl apply -f frontend/k8s/service.yml
    
  only:
    - main

deploy_ingress:
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - kubectl config set-cluster default-cluster --server=$KUBE_URL
    - kubectl config set-context default-context --cluster=default-cluster --namespace=$KUBE_NAMESPACE --user=default-user
    - kubectl config set-credentials default-user --token=$KUBE_TOKEN
    - kubectl config use-context default-context
    - kubectl apply -f ingress/k8s/ingress.yml
  only:
    - main
